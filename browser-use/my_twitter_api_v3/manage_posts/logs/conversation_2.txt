 SystemMessage 
You are an AI agent designed to automate browser tasks. Your goal is to accomplish the ultimate task following the rules.

# Input Format
Task
Previous steps
Current URL
Open Tabs
Interactive Elements
[index]<type>text</type>
- index: Numeric identifier for interaction
- type: HTML element type (button, input, etc.)
- text: Element description
Example:
[33]<button>Submit Form</button>

- Only elements with numeric indexes in [] are interactive
- elements without [] provide only context

# Response Rules
1. RESPONSE FORMAT: You must ALWAYS respond with valid JSON in this exact format:
{"current_state": {"evaluation_previous_goal": "Success|Failed|Unknown - Analyze the current elements and the image to check if the previous goals/actions are successful like intended by the task. Mention if something unexpected happened. Shortly state why/why not",
"memory": "Description of what has been done and what you need to remember. Be very specific. Count here ALWAYS how many times you have done something and how many remain. E.g. 0 out of 10 websites analyzed. Continue with abc and xyz",
"next_goal": "What needs to be done with the next immediate action"},
"action":[{"one_action_name": {// action-specific parameter}}, // ... more actions in sequence]}

2. ACTIONS: You can specify multiple actions in the list to be executed in sequence. But always specify only one action name per item. Use maximum {max_actions} actions per sequence.
Common action sequences:
- Form filling: [{"input_text": {"index": 1, "text": "username"}}, {"input_text": {"index": 2, "text": "password"}}, {"click_element": {"index": 3}}]
- Navigation and extraction: [{"go_to_url": {"url": "https://example.com"}}, {"extract_content": {"goal": "extract the names"}}]
- Actions are executed in the given order
- If the page changes after an action, the sequence is interrupted and you get the new state.
- Only provide the action sequence until an action which changes the page state significantly.
- Try to be efficient, e.g. fill forms at once, or chain actions where nothing changes on the page
- only use multiple actions if it makes sense.

3. ELEMENT INTERACTION:
- Only use indexes of the interactive elements
- Elements marked with "[]Non-interactive text" are non-interactive

4. NAVIGATION & ERROR HANDLING:
- If no suitable elements exist, use other functions to complete the task
- If stuck, try alternative approaches - like going back to a previous page, new search, new tab etc.
- Handle popups/cookies by accepting or closing them
- Use scroll to find elements you are looking for
- If you want to research something, open a new tab instead of using the current tab
- If captcha pops up, try to solve it - else try a different approach
- If the page is not fully loaded, use wait action

5. TASK COMPLETION:
- Use the done action as the last action as soon as the ultimate task is complete
- Dont use "done" before you are done with everything the user asked you, except you reach the last step of max_steps. 
- If you reach your last step, use the done action even if the task is not fully finished. Provide all the information you have gathered so far. If the ultimate task is completly finished set success to true. If not everything the user asked for is completed set success in done to false!
- If you have to do something repeatedly for example the task says for "each", or "for all", or "x times", count always inside "memory" how many times you have done it and how many remain. Don't stop until you have completed like the task asked you. Only call done after the last step.
- Don't hallucinate actions
- Make sure you include everything you found out for the ultimate task in the done text parameter. Do not just say you are done, but include the requested information of the task. 

6. VISUAL CONTEXT:
- When an image is provided, use it to understand the page layout
- Bounding boxes with labels on their top right corner correspond to element indexes

7. Form filling:
- If you fill an input field and your action sequence is interrupted, most often something changed e.g. suggestions popped up under the field.

8. Long tasks:
- Keep track of the status and subresults in the memory. 

9. Extraction:
- If your task is to find information - call extract_content on the specific pages to get and store the information.
Your responses must be always JSON with the specified format.

 HumanMessage 
Your ultimate task is: """Post a tweet saying:I want mexican food right now.The last word in the tweet should be bolded (press the B button to bold)""". If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.

 HumanMessage 
Example output:

 AIMessage 


 ToolMessage 
Browser started

 HumanMessage 
[Your task history memory starts here]

 HumanMessage 
Action result: ðŸ”—  Opened new tab with https://pro.x.com/i/decks/1902192120082866405

 HumanMessage 
[Task history memory ends]
[Current state starts here]
The following is one-time information - if you need to remember it write it to memory:
Current url: https://pro.x.com/i/decks/1902192120082866405
Available tabs:
[TabInfo(page_id=0, url='about:blank', title=''), TabInfo(page_id=1, url='https://pro.x.com/i/decks/1902192120082866405', title='X Pro')]
Interactive elements from top layer of the current page inside the viewport:
[Start of page]
[0]<div To view keyboard shortcuts, press question mark
View keyboard shortcuts/>
[1]<div Messages/>
[2]<button Compose new Message/>
[3]<button Expand/>
[4]<div Opens dialog to create a new deck
Pro
Â© 2025 X Corp./>
[5]<div />
[6]<button Account menu/>
[7]<div presentation/>
[8]<div />
[9]<div zerk-dot/>
[10]<div @xerkdot/>
[11]<button Compose post>Post/>
[12]<button Add column/>
[13]<button false>Search/>
[14]<a link;Manage Decks>Decks
Opens dialog to manage your decks/>
[15]<a link>New Deck/>
[16]<button Selected Deck Personal>Personal
Opens dialog to manage the selected deck/>
[17]<a Edit Deck;link/>
[18]<button More menu items;false>More/>
[19]<button true;Nav bar/>
[20]<div />
[21]<button Done/>
[22]<button Post/>
[23]<div />
[24]<div presentation/>
[25]<div />
[26]<div />
[27]<button Choose audience;false>Everyone/>
[28]<div Whatâ€™s happening?/>
[29]<div textbox;Post text/>
[30]<div />
[31]<div />
[32]<div />
[33]<div />
[34]<div />
[35]<button Everyone can reply/>
[36]<div />
[37]<div presentation/>
[38]<button Add photos or video/>
[39]<div presentation/>
[40]<button Add a GIF/>
[41]<div presentation/>
[42]<button Enhance your post with Grok/>
[43]<div presentation/>
[44]<button Add poll/>
[45]<div presentation/>
[46]<div />
[47]<button Add emoji/>
[48]<div presentation/>
[49]<button Schedule post/>
[50]<div presentation/>
[51]<button Tag location/>
[52]<div presentation/>
[53]<button Bold, (CTRL+B)/>
[54]<div presentation/>
[55]<button Italic, (CTRL+I)/>
[56]<section region>See new posts/>
[57]<button Reorder column - Elon Musk's gang/>
[58]<div List
Elon Musk's gang/>
[59]<button Open column options - Elon Musk's gang/>
[60]<div />
[61]<div Loading posts;progressbar/>
[62]<a link>Add column/>
[63]<a link;Display/>
[64]<a Edit Deck;link/>
[65]<a link>Terms of Service/>
[66]<a link>Privacy Policy/>
[67]<a link>Cookie Policy/>
[68]<a link>Accessibility/>
[69]<a link>Ads info/>
[70]<button false>More/>
[End of page]
Current step: 1/10Current date and time: 2025-03-20 19:07

 RESPONSE
{
  "current_state": {
    "evaluation_previous_goal": "Unknown - No previous action relevance yet to evaluate the task.",
    "memory": "Need to post a tweet saying: 'I want mexican food right now.' with the last word bolded. ",
    "next_goal": "Click 'Post' button to start composing a tweet."
  },
  "action": [
    {
      "click_element": {
        "index": 11
      }
    }
  ]
}